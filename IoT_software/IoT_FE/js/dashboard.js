// ========== DASHBOARD MAIN LOGIC ==========
// Logic ch√≠nh cho trang dashboard

// Kh·ªüi t·∫°o dashboard
// H√†m kh·ªüi t·∫°o to√†n b·ªô dashboard
window.initializeDashboard = async function() {
  console.log("üöÄ Initializing Dashboard..."); // Th√¥ng b√°o b·∫Øt ƒë·∫ßu kh·ªüi t·∫°o
  
  // Load navbar component
  await window.loadNavbar('dashboard'); // T·∫£i navbar v·ªõi active page
  
  // Debug: Ki·ªÉm tra element device-list
  const deviceListEl = document.getElementById("device-list");
  console.log("üîç Device list element:", deviceListEl);
  
  if (!deviceListEl) {
    console.error("‚ùå Device list element not found!");
    return;
  }
  
  // Render danh s√°ch thi·∫øt b·ªã
  console.log("üéØ Rendering devices...");
  window.renderDevices(); // T·∫°o giao di·ªán thi·∫øt b·ªã
  
  // Debug: Ki·ªÉm tra buttons sau khi render
  const buttons = document.querySelectorAll("#device-list button");
  console.log("üîç Found buttons:", buttons.length);
  
  // Test API connection
  console.log("üîç Testing API connection...");
  window.testAPIConnection();
  
  // Kh·ªüi t·∫°o chart
  window.initializeChart(); // Kh·ªüi t·∫°o bi·ªÉu ƒë·ªì
  
  // Delay tr∆∞·ªõc khi b·∫Øt ƒë·∫ßu polling
  setTimeout(() => {
    console.log("üìä Starting data polling..."); // Th√¥ng b√°o b·∫Øt ƒë·∫ßu polling
    
    // L·∫•y d·ªØ li·ªáu l·∫ßn ƒë·∫ßu
    window.updateSensorData(); // C·∫≠p nh·∫≠t d·ªØ li·ªáu c·∫£m bi·∫øn
    window.fetchStatuses(); // L·∫•y tr·∫°ng th√°i thi·∫øt b·ªã

    // B·∫Øt ƒë·∫ßu polling
    setInterval(window.updateSensorData, window.pollingConfig.sensorDataInterval); // Polling d·ªØ li·ªáu c·∫£m bi·∫øn
    setInterval(window.fetchStatuses, window.pollingConfig.statusInterval); // Polling tr·∫°ng th√°i thi·∫øt b·ªã
    
  }, window.pollingConfig.initialDelay); // ƒê·ª£i delay ban ƒë·∫ßu
  
  console.log("‚úÖ Dashboard initialized successfully"); // Th√¥ng b√°o kh·ªüi t·∫°o th√†nh c√¥ng
};

// Kh·ªüi ch·∫°y khi DOM ƒë√£ load
// Event listener ch·ªù DOM load xong r·ªìi kh·ªüi t·∫°o dashboard
window.onPageLoad(() => {
  window.initializeDashboard(); // G·ªçi h√†m kh·ªüi t·∫°o dashboard
});

// Test API connection
// H√†m test k·∫øt n·ªëi API
window.testAPIConnection = async function() {
  try {
    console.log("üîç Testing API connection to:", window.API_ROOT);
    const response = await fetch(`${window.API_ROOT}/`);
    const data = await response.text();
    console.log("‚úÖ API connection test:", data);
  } catch (error) {
    console.error("‚ùå API connection test failed:", error);
  }
};

window.logLoaded("Dashboard main logic"); // Th√¥ng b√°o logic dashboard ƒë√£ t·∫£i
