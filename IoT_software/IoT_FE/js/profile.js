// ========== PROFILE PAGE LOGIC ==========
// Logic cho trang profile

// Profile data
// D·ªØ li·ªáu profile
const profileData = {
  name: "Ph√πng B√° Huy", // T√™n sinh vi√™n
  studentId: "B22DCCN395", // M√£ sinh vi√™n
  className: "IoT 15", // L·ªõp h·ªçc
  instructor: "Nguy·ªÖn Qu·ªëc Uy", // Gi·∫£ng vi√™n h∆∞·ªõng d·∫´n
  github: "https://github.com/phunghuy-neb/IoT_project", // Link GitHub
  pdf: "https://sg.docworkspace.com/d/sIDugt8bwAcjM-8YG?sa=601.1037", // Link PDF b√°o c√°o
  postman: "postman://collections?collection=48789747-9167d42d-7e1c-49d3-94b3-94afb56b1a53", // Link Postman collection
  avatar: "../images/avtprofile.jpg" // Link ·∫£nh ƒë·∫°i di·ªán local
};

// Initialize profile page
// H√†m kh·ªüi t·∫°o trang profile
window.initializeProfile = async function() {
  console.log("üöÄ Initializing Profile page..."); // Th√¥ng b√°o b·∫Øt ƒë·∫ßu kh·ªüi t·∫°o
  
  // Load navbar component
  await window.loadNavbar('profile'); // T·∫£i navbar v·ªõi active page
  
  // Render profile content
  renderProfile(); // Render n·ªôi dung profile
  
  // Setup event listeners
  setupEventListeners(); // Thi·∫øt l·∫≠p event listener
  
  console.log("‚úÖ Profile page initialized"); // Th√¥ng b√°o kh·ªüi t·∫°o th√†nh c√¥ng
};

// Render profile content
// H√†m render n·ªôi dung profile
function renderProfile() {
  const profileContainer = document.getElementById('profile-container'); // L·∫•y container profile
  if (!profileContainer) return; // Tho√°t n·∫øu kh√¥ng t√¨m th·∫•y
  
  profileContainer.innerHTML = `
    <div class="card profile-card p-4 shadow">
      <img src="${profileData.avatar}" alt="Avatar" width="120" height="120" class="rounded-circle"> <!-- ·∫¢nh ƒë·∫°i di·ªán -->
      <h3 class="fw-bold">${profileData.name}</h3> <!-- T√™n sinh vi√™n -->
      <div class="profile-info">
        <p>M√£ SV: <strong>${profileData.studentId}</strong></p> <!-- M√£ sinh vi√™n -->
        <p>L·ªõp: <strong>${profileData.className}</strong></p> <!-- L·ªõp h·ªçc -->
        <p>GVHD: <strong>${profileData.instructor}</strong></p> <!-- Gi·∫£ng vi√™n h∆∞·ªõng d·∫´n -->
        <p>Github: <a href="${profileData.github}" target="_blank">phunghuy-neb/IoT_project</a></p> <!-- Link GitHub -->
        <p>PDF: <a href="${profileData.pdf}" target="_blank">Xem t·∫°i ƒë√¢y</a></p> <!-- Link PDF b√°o c√°o -->
        <p>Api postman: <a href="${profileData.postman}" target="_blank" rel="noopener noreferrer">Xem t·∫°i ƒë√¢y</a></p> <!-- Link Postman -->
      </div>
    </div>
  `;
}

// Setup event listeners
// H√†m thi·∫øt l·∫≠p event listener
function setupEventListeners() {
  // Add any profile-specific event listeners here
  // Th√™m c√°c event listener c·ª• th·ªÉ cho profile
  // For example: edit profile, change avatar, etc.
  
  // Example: Handle external link clicks
  // X·ª≠ l√Ω click v√†o link b√™n ngo√†i
  document.addEventListener('click', function(e) {
    if (e.target.tagName === 'A' && e.target.href.includes('postman://')) {
      e.preventDefault(); // NgƒÉn m·ªü link m·∫∑c ƒë·ªãnh
      window.showNotification('ƒêang m·ªü Postman collection...', 'info'); // Hi·ªÉn th·ªã th√¥ng b√°o
    }
  });
}

// Update profile data (for future use)
// H√†m c·∫≠p nh·∫≠t d·ªØ li·ªáu profile (d√†nh cho t∆∞∆°ng lai)
window.updateProfile = function(newData) {
  Object.assign(profileData, newData); // C·∫≠p nh·∫≠t d·ªØ li·ªáu
  renderProfile(); // Render l·∫°i profile
};

// Get profile data
// H√†m l·∫•y d·ªØ li·ªáu profile
window.getProfileData = function() {
  return { ...profileData }; // Tr·∫£ v·ªÅ b·∫£n sao d·ªØ li·ªáu
};

// Initialize when DOM is ready
// Kh·ªüi t·∫°o khi DOM ƒë√£ s·∫µn s√†ng
window.onPageLoad(() => {
  window.initializeProfile(); // G·ªçi h√†m kh·ªüi t·∫°o
});

window.logLoaded("Profile functions"); // Th√¥ng b√°o c√°c h√†m profile ƒë√£ t·∫£i
